adamfenelon@Adams-MacBook-Air App % rm -f Podfile.lock
adamfenelon@Adams-MacBook-Air App % pod repo update
Updating spec repo `trunk`
adamfenelon@Adams-MacBook-Air App % pod install
Analyzing dependencies
[!] CocoaPods could not find compatible versions for pod "CapacitorStatusBar":
  In Podfile:
    CapacitorStatusBar (from `../../node_modules/@capacitor/status-bar`)

Specs satisfying the `CapacitorStatusBar (from `../../node_modules/@capacitor/status-bar`)` dependency were found, but they required a higher minimum deployment target.
adamfenelon@Adams-MacBook-Air App % grep -r "version" ../../node_modules/@capacitor/status-bar/
../../node_modules/@capacitor/status-bar/CapacitorStatusBar.podspec:  s.version = package['version']
../../node_modules/@capacitor/status-bar/CapacitorStatusBar.podspec:  s.source = { :git => 'https://github.com/ionic-team/capacitor-plugins.git', :tag => package['name'] + '@' + package['version'] }
../../node_modules/@capacitor/status-bar/CapacitorStatusBar.podspec:  s.swift_version = '5.1'
../../node_modules/@capacitor/status-bar/dist/esm/index.js.map:{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAIjD,MAAM,SAAS,GAAG,cAAc,CAAkB,WAAW,CAAC,CAAC;AAE/D,cAAc,eAAe,CAAC;AAC9B,OAAO,EAAE,SAAS,EAAE,CAAC","sourcesContent":["import { registerPlugin } from '@capacitor/core';\n\nimport type { StatusBarPlugin } from './definitions';\n\nconst StatusBar = registerPlugin<StatusBarPlugin>('StatusBar');\n\nexport * from './definitions';\nexport { StatusBar };\n"]}
../../node_modules/@capacitor/status-bar/dist/esm/definitions.js.map:{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,wCAAwC;AAoDxC,MAAM,CAAN,IAAY,KAuBX;AAvBD,WAAY,KAAK;IACf;;;;OAIG;IACH,sBAAa,CAAA;IAEb;;;;OAIG;IACH,wBAAe,CAAA;IAEf;;;;;;OAMG;IACH,4BAAmB,CAAA;AACrB,CAAC,EAvBW,KAAK,KAAL,KAAK,QAuBhB;AAeD,MAAM,CAAN,IAAY,SAwBX;AAxBD,WAAY,SAAS;IACnB;;;;OAIG;IACH,0BAAa,CAAA;IAEb;;;;;;;OAOG;IACH,4BAAe,CAAA;IAEf;;;;OAIG;IACH,0BAAa,CAAA;AACf,CAAC,EAxBW,SAAS,KAAT,SAAS,QAwBpB;AAiID;;;GAGG;AACH,MAAM,CAAC,MAAM,kBAAkB,GAAG,SAAS,CAAC;AAE5C;;;GAGG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,CAAC","sourcesContent":["/// <reference types=\"@capacitor/cli\" />\n\ndeclare module '@capacitor/cli' {\n  export interface PluginsConfig {\n    /**\n     * These config values are available:\n     */\n    StatusBar?: {\n      /**\n       * Whether the statusbar is overlaid or not.\n       * For applications targeting Android 15, this property has no effect unless\n       * the property windowOptOutEdgeToEdgeEnforcement is added to the application layout file.\n       * Otherwise, the application assumes always overlays as true.\n       * More details in https://developer.android.com/reference/android/R.attr#windowOptOutEdgeToEdgeEnforcement\n       *\n       * @since 1.0.0\n       * @default true\n       * @example false\n       */\n      overlaysWebView?: boolean;\n\n      /**\n       * Style of the text of the status bar.\n       *\n       * @since 1.0.0\n       * @default default\n       * @example \"DARK\"\n       */\n      style?: string;\n\n      /**\n       * Color of the background of the statusbar in hex format, #RRGGBB.\n       * Doesn't work if `overlaysWebView` is true.\n       *\n       * @since 1.0.0\n       * @default #000000\n       * @example \"#ffffffff\"\n       */\n      backgroundColor?: string;\n    };\n  }\n}\n\nexport interface StyleOptions {\n  /**\n   * Style of the text of the status bar.\n   *\n   * @since 1.0.0\n   */\n  style: Style;\n}\n\nexport enum Style {\n  /**\n   * Light text for dark backgrounds.\n   *\n   * @since 1.0.0\n   */\n  Dark = 'DARK',\n\n  /**\n   * Dark text for light backgrounds.\n   *\n   * @since 1.0.0\n   */\n  Light = 'LIGHT',\n\n  /**\n   * The style is based on the device appearance.\n   * If the device is using Dark mode, the statusbar text will be light.\n   * If the device is using Light mode, the statusbar text will be dark.\n   *\n   * @since 1.0.0\n   */\n  Default = 'DEFAULT',\n}\n\nexport interface AnimationOptions {\n  /**\n   * The type of status bar animation used when showing or hiding.\n   *\n   * This option is only supported on iOS.\n   *\n   * @default Animation.Fade\n   *\n   * @since 1.0.0\n   */\n  animation: Animation;\n}\n\nexport enum Animation {\n  /**\n   * No animation during show/hide.\n   *\n   * @since 1.0.0\n   */\n  None = 'NONE',\n\n  /**\n   * Slide animation during show/hide.\n   * It doesn't work on iOS 15+.\n   *\n   * @deprecated Use Animation.Fade or Animation.None instead.\n   *\n   * @since 1.0.0\n   */\n  Slide = 'SLIDE',\n\n  /**\n   * Fade animation during show/hide.\n   *\n   * @since 1.0.0\n   */\n  Fade = 'FADE',\n}\n\nexport interface BackgroundColorOptions {\n  /**\n   * A hex color to which the status bar color is set.\n   *\n   * @since 1.0.0\n   */\n  color: string;\n}\n\nexport interface StatusBarInfo {\n  /**\n   * Whether the status bar is visible or not.\n   *\n   * @since 1.0.0\n   */\n  visible: boolean;\n\n  /**\n   * The current status bar style.\n   *\n   * @since 1.0.0\n   */\n  style: Style;\n\n  /**\n   * The current status bar color.\n   *\n   * @since 1.0.0\n   */\n  color?: string;\n\n  /**\n   * Whether the statusbar is overlaid or not.\n   *\n   * @since 1.0.0\n   */\n  overlays?: boolean;\n}\n\nexport interface SetOverlaysWebViewOptions {\n  /**\n   * Whether to overlay the status bar or not.\n   *\n   * @since 1.0.0\n   */\n  overlay: boolean;\n}\n\nexport interface StatusBarPlugin {\n  /**\n   * Set the current style of the status bar.\n   *\n   * @since 1.0.0\n   */\n  setStyle(options: StyleOptions): Promise<void>;\n\n  /**\n   * Set the background color of the status bar.\n   *\n   * @since 1.0.0\n   */\n  setBackgroundColor(options: BackgroundColorOptions): Promise<void>;\n\n  /**\n   * Show the status bar.\n   * On iOS, if the status bar is initially hidden and the initial style is set to\n   * `UIStatusBarStyleLightContent`, first show call might present a glitch on the\n   * animation showing the text as dark and then transition to light. It's recommended\n   * to use `Animation.None` as the animation on the first call.\n   *\n   * @since 1.0.0\n   */\n  show(options?: AnimationOptions): Promise<void>;\n\n  /**\n   * Hide the status bar.\n   *\n   * @since 1.0.0\n   */\n  hide(options?: AnimationOptions): Promise<void>;\n\n  /**\n   * Get info about the current state of the status bar.\n   *\n   * @since 1.0.0\n   */\n  getInfo(): Promise<StatusBarInfo>;\n\n  /**\n   * Set whether or not the status bar should overlay the webview to allow usage\n   * of the space underneath it.\n   *\n   * @since 1.0.0\n   */\n  setOverlaysWebView(options: SetOverlaysWebViewOptions): Promise<void>;\n}\n\n/**\n * @deprecated Use `StyleOptions`.\n * @since 1.0.0\n */\nexport type StatusBarStyleOptions = StyleOptions;\n\n/**\n * @deprecated Use `BackgroundColorOptions`.\n * @since 1.0.0\n */\nexport type StatusBarBackgroundColorOptions = BackgroundColorOptions;\n\n/**\n * @deprecated Use `SetOverlaysWebViewOptions`.\n * @since 1.0.0\n */\nexport type StatusBarOverlaysWebviewOptions = SetOverlaysWebViewOptions;\n\n/**\n * @deprecated Use `StatusBarInfo`.\n * @since 1.0.0\n */\nexport type StatusBarInfoResult = StatusBarInfo;\n\n/**\n * @deprecated Use `AnimationOptions`.\n * @since 1.0.0\n */\nexport type StatusBarAnimationOptions = AnimationOptions;\n\n/**\n * @deprecated Use `Animation`.\n * @since 1.0.0\n */\nexport const StatusBarAnimation = Animation;\n\n/**\n * @deprecated Use `Style`.\n * @since 1.0.0\n */\nexport const StatusBarStyle = Style;\n"]}
../../node_modules/@capacitor/status-bar/dist/plugin.cjs.js.map:{"version":3,"file":"plugin.cjs.js","sources":["esm/definitions.js","esm/index.js"],"sourcesContent":["/// <reference types=\"@capacitor/cli\" />\nexport var Style;\n(function (Style) {\n    /**\n     * Light text for dark backgrounds.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Dark\"] = \"DARK\";\n    /**\n     * Dark text for light backgrounds.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Light\"] = \"LIGHT\";\n    /**\n     * The style is based on the device appearance.\n     * If the device is using Dark mode, the statusbar text will be light.\n     * If the device is using Light mode, the statusbar text will be dark.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nexport var Animation;\n(function (Animation) {\n    /**\n     * No animation during show/hide.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"None\"] = \"NONE\";\n    /**\n     * Slide animation during show/hide.\n     * It doesn't work on iOS 15+.\n     *\n     * @deprecated Use Animation.Fade or Animation.None instead.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"Slide\"] = \"SLIDE\";\n    /**\n     * Fade animation during show/hide.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"Fade\"] = \"FADE\";\n})(Animation || (Animation = {}));\n/**\n * @deprecated Use `Animation`.\n * @since 1.0.0\n */\nexport const StatusBarAnimation = Animation;\n/**\n * @deprecated Use `Style`.\n * @since 1.0.0\n */\nexport const StatusBarStyle = Style;\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\nconst StatusBar = registerPlugin('StatusBar');\nexport * from './definitions';\nexport { StatusBar };\n//# sourceMappingURL=index.js.map"],"names":["Style","Animation","registerPlugin"],"mappings":";;;;AAAA;AACWA;AACX,CAAC,UAAU,KAAK,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS;AAChC,CAAC,EAAEA,aAAK,KAAKA,aAAK,GAAG,EAAE,CAAC,CAAC;AACdC;AACX,CAAC,UAAU,SAAS,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;AAC9B,CAAC,EAAEA,iBAAS,KAAKA,iBAAS,GAAG,EAAE,CAAC,CAAC;AACjC;AACA;AACA;AACA;AACY,MAAC,kBAAkB,GAAGA;AAClC;AACA;AACA;AACA;AACY,MAAC,cAAc,GAAGD;;ACxDzB,MAAC,SAAS,GAAGE,mBAAc,CAAC,WAAW;;;;;;"}
../../node_modules/@capacitor/status-bar/dist/plugin.js.map:{"version":3,"file":"plugin.js","sources":["esm/definitions.js","esm/index.js"],"sourcesContent":["/// <reference types=\"@capacitor/cli\" />\nexport var Style;\n(function (Style) {\n    /**\n     * Light text for dark backgrounds.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Dark\"] = \"DARK\";\n    /**\n     * Dark text for light backgrounds.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Light\"] = \"LIGHT\";\n    /**\n     * The style is based on the device appearance.\n     * If the device is using Dark mode, the statusbar text will be light.\n     * If the device is using Light mode, the statusbar text will be dark.\n     *\n     * @since 1.0.0\n     */\n    Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nexport var Animation;\n(function (Animation) {\n    /**\n     * No animation during show/hide.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"None\"] = \"NONE\";\n    /**\n     * Slide animation during show/hide.\n     * It doesn't work on iOS 15+.\n     *\n     * @deprecated Use Animation.Fade or Animation.None instead.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"Slide\"] = \"SLIDE\";\n    /**\n     * Fade animation during show/hide.\n     *\n     * @since 1.0.0\n     */\n    Animation[\"Fade\"] = \"FADE\";\n})(Animation || (Animation = {}));\n/**\n * @deprecated Use `Animation`.\n * @since 1.0.0\n */\nexport const StatusBarAnimation = Animation;\n/**\n * @deprecated Use `Style`.\n * @since 1.0.0\n */\nexport const StatusBarStyle = Style;\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\nconst StatusBar = registerPlugin('StatusBar');\nexport * from './definitions';\nexport { StatusBar };\n//# sourceMappingURL=index.js.map"],"names":["Style","Animation","registerPlugin"],"mappings":";;;IAAA;AACWA;IACX,CAAC,UAAU,KAAK,EAAE;IAClB;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM;IAC1B;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,OAAO;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,GAAG,SAAS;IAChC,CAAC,EAAEA,aAAK,KAAKA,aAAK,GAAG,EAAE,CAAC,CAAC;AACdC;IACX,CAAC,UAAU,SAAS,EAAE;IACtB;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;IAC9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO;IAChC;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;IAC9B,CAAC,EAAEA,iBAAS,KAAKA,iBAAS,GAAG,EAAE,CAAC,CAAC;IACjC;IACA;IACA;IACA;AACY,UAAC,kBAAkB,GAAGA;IAClC;IACA;IACA;IACA;AACY,UAAC,cAAc,GAAGD;;ACxDzB,UAAC,SAAS,GAAGE,mBAAc,CAAC,WAAW;;;;;;;;;;;;"}
../../node_modules/@capacitor/status-bar/package.json:  "version": "7.0.1",
../../node_modules/@capacitor/status-bar/android/build.gradle:        versionCode 1
../../node_modules/@capacitor/status-bar/android/build.gradle:        versionName "1.0"
../../node_modules/@capacitor/status-bar/Package.swift:// swift-tools-version: 5.9
adamfenelon@Adams-MacBook-Air App % pod install --verbose
  Preparing

Analyzing dependencies

Inspecting targets to integrate
  Using `ARCHS` setting to build architectures of target `Pods-App`: (``)

Fetching external sources
-> Fetching podspec for `Capacitor` from `../../node_modules/@capacitor/ios`
-> Fetching podspec for `CapacitorApp` from `../../node_modules/@capacitor/app`
-> Fetching podspec for `CapacitorCamera` from `../../node_modules/@capacitor/camera`
-> Fetching podspec for `CapacitorCordova` from `../../node_modules/@capacitor/ios`
-> Fetching podspec for `CapacitorDevice` from `../../node_modules/@capacitor/device`
-> Fetching podspec for `CapacitorGeolocation` from `../../node_modules/@capacitor/geolocation`
-> Fetching podspec for `CapacitorSplashScreen` from `../../node_modules/@capacitor/splash-screen`
-> Fetching podspec for `CapacitorStatusBar` from `../../node_modules/@capacitor/status-bar`

Resolving dependencies of `Podfile`
  CDN: trunk Relative path: CocoaPods-version.yml exists! Returning local
  because checking is only performed in repo update
[!] CocoaPods could not find compatible versions for pod "CapacitorStatusBar":
  In Podfile:
    CapacitorStatusBar (from `../../node_modules/@capacitor/status-bar`)

Specs satisfying the `CapacitorStatusBar (from `../../node_modules/@capacitor/status-bar`)` dependency were found, but they required a higher minimum deployment target.

/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/molinillo-0.8.0/lib/molinillo/resolution.rb:317:in 'Molinillo::Resolver::Resolution#raise_error_unless_state'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/molinillo-0.8.0/lib/molinillo/resolution.rb:299:in 'block in Molinillo::Resolver::Resolution#unwind_for_conflict'
<internal:kernel>:91:in 'Kernel#tap'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/molinillo-0.8.0/lib/molinillo/resolution.rb:297:in 'Molinillo::Resolver::Resolution#unwind_for_conflict'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/molinillo-0.8.0/lib/molinillo/resolution.rb:682:in 'Molinillo::Resolver::Resolution#attempt_to_activate'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/molinillo-0.8.0/lib/molinillo/resolution.rb:254:in 'Molinillo::Resolver::Resolution#process_topmost_state'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/molinillo-0.8.0/lib/molinillo/resolution.rb:182:in 'Molinillo::Resolver::Resolution#resolve'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/molinillo-0.8.0/lib/molinillo/resolver.rb:43:in 'Molinillo::Resolver#resolve'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/resolver.rb:94:in 'Pod::Resolver#resolve'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/installer/analyzer.rb:1082:in 'block in Pod::Installer::Analyzer#resolve_dependencies'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/user_interface.rb:64:in 'Pod::UserInterface.section'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/installer/analyzer.rb:1080:in 'Pod::Installer::Analyzer#resolve_dependencies'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/installer/analyzer.rb:125:in 'Pod::Installer::Analyzer#analyze'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/installer.rb:422:in 'Pod::Installer#analyze'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/installer.rb:244:in 'block in Pod::Installer#resolve_dependencies'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/user_interface.rb:64:in 'Pod::UserInterface.section'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/installer.rb:243:in 'Pod::Installer#resolve_dependencies'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/installer.rb:162:in 'Pod::Installer#install!'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/command/install.rb:52:in 'Pod::Command::Install#run'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/claide-1.1.0/lib/claide/command.rb:334:in 'CLAide::Command.run'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/lib/cocoapods/command.rb:52:in 'Pod::Command.run'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/gems/cocoapods-1.16.2/bin/pod:55:in '<top (required)>'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/bin/pod:25:in 'Kernel#load'
/opt/homebrew/Cellar/cocoapods/1.16.2_1/libexec/bin/pod:25:in '<main>'
adamfenelon@Adams-MacBook-Air App % 
